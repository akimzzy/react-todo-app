{"version":3,"sources":["Components/Heading.js","Context/AppReducer.js","Context/GlobalState.js","Components/AddTodo.js","Components/Todo.js","Components/TodoList.js","App.js","index.js"],"names":["Heading","state","action","type","list","payload","map","x","id","done","checkValue","filter","todoData","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTodo","addTodo","todo","doneTodo","useDateTime","format","val","toLocaleString","length","Date","getDate","getMonth","getFullYear","getHours","getMinutes","AddTodo","useState","text","setText","animPlay","setAnimPlay","useContext","date","onSubmit","e","preventDefault","trim","Math","ceil","random","dateTime","duration","Number","window","getComputedStyle","target","querySelector","getPropertyValue","replace","setTimeout","addNewTodo","htmlFor","placeholder","required","onChange","className","xmlns","width","height","viewBox","d","transform","fill","Todo","fade","setFade","CheckValue","setCheckValue","useEffect","style","background","checked","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","onClick","addEventListener","animDeleteTodo","TodoList","cur","key","App","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cadf54d8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Heading = () => {\r\n    return ( <header>\r\n        <h1>TODO APP</h1>\r\n        <p>Just add things...</p>\r\n            \r\n    </header> );\r\n}\r\n \r\nexport default Heading;","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            return {\r\n                ...state,\r\n                list: [action.payload, ...state.list]\r\n            }\r\n\r\n        case 'DONE_TODO':\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => {\r\n                    action.payload.id === x.id ? x.done = action.payload.checkValue : x.done = !action.payload.checkValue \r\n                    return x\r\n                })\r\n            }\r\n\r\n        case 'DELETE_TODO':\r\n            return {\r\n                ...state,\r\n                list: state.list.filter(x => x.id !== action.payload)\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n} ","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial State\r\nlet todoData = {\r\n    list: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(todoData);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, todoData)\r\n\r\n    // Actions\r\n    const deleteTodo = id => {\r\n        dispatch({\r\n            type: \"DELETE_TODO\",\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    const addTodo = todo => {\r\n        dispatch({\r\n            type: \"ADD_TODO\",\r\n            payload: todo\r\n        })\r\n    }\r\n    \r\n    const doneTodo = (id, checkValue) => {\r\n        dispatch({\r\n            type: \"DONE_TODO\",\r\n            payload: {id, checkValue}\r\n        })\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        list: state.list,\r\n        deleteTodo,\r\n        addTodo,\r\n        doneTodo\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\nconst AddTodo = () => {\r\n    const [text, setText] = useState(\"\");\r\n    const [animPlay, setAnimPlay] = useState(false)\r\n    const { addTodo } = useContext(GlobalContext);\r\n    const date = useDateTime()\r\n    const newId = () => Math.ceil(Math.random() * 1000000) + 1;\r\n\r\n    const addNewTodo = (e) => {\r\n        e.preventDefault()\r\n        if (text.trim() !== \"\") {\r\n            const todo = {\r\n                id: newId(),\r\n                text,\r\n                done: false,\r\n                dateTime: date()\r\n            }\r\n            setAnimPlay(true)\r\n            const duration = Number(window.getComputedStyle(e.target.querySelector(\"svg\"), null).getPropertyValue(\"transition-duration\").replace(\"s\", \"\")) * 1000\r\n            addTodo(todo)\r\n            setText(\"\")\r\n            setTimeout(()=> {\r\n                setAnimPlay(false)\r\n            }, duration)\r\n           \r\n\r\n            \r\n        }\r\n    }\r\n\r\n    return (<form onSubmit={(e) => addNewTodo(e)}>\r\n        <label htmlFor=\"quickAdd\"><h2>Quick Add</h2></label>\r\n        <input type=\"text\" id=\"quickAdd\" placeholder=\"type here\" required value={text} onChange={(e) => setText(e.target.value)} />\r\n        <button>Add to list</button>\r\n        <svg className={animPlay ? \"add_anim\" : null} xmlns=\"http://www.w3.org/2000/svg\" width=\"16.004\" height=\"11.333\" viewBox=\"0 0 16.004 11.333\"><path d=\"M-16.2,40.933a1,1,0,0,1-1.6,0l-7-9.333A1,1,0,0,1-24,30h14a1,1,0,0,1,.8,1.6Z\" transform=\"translate(25.002 -30)\" fill=\"#fff\" /></svg>\r\n    </form>);\r\n}\r\n\r\nconst useDateTime = () => {\r\n    const date = () => {\r\n        const format = val => val.toLocaleString().length === 1 ? `0${val}` : val;\r\n        return `${format(new Date().getDate())}-${format(new Date().getMonth())}-${new Date().getFullYear()} | ${format(new Date().getHours())}:${format(new Date().getMinutes())}`;\r\n    }\r\n\r\n    return date\r\n}\r\n\r\nexport default AddTodo;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nconst Todo = ({ text, dateTime, id }) => {\r\n    const { doneTodo, deleteTodo } = useContext(GlobalContext)\r\n    const [fade, setFade] = useState(false)\r\n    const [CheckValue, setCheckValue] = useState(false)\r\n\r\n    const animDeleteTodo = id => {\r\n        setFade(true)\r\n        window.addEventListener(\"transitionend\", () => deleteTodo(id))\r\n    }\r\n\r\n    useEffect(() => doneTodo(id, CheckValue), [CheckValue])\r\n\r\n    return (<li className={fade ? \"del_anim\" : null}>\r\n        <div >\r\n            <h3 className={CheckValue ? \"done_todo\" : null}>{text}</h3>\r\n            <span style={{background: CheckValue ? \"white\" : \"transparent\"}}>\r\n                <input type=\"checkbox\" checked={CheckValue} onChange={() => setCheckValue(!CheckValue)} />\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"green\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={CheckValue ? \"feather feather-check-circle check_anim\" : \"feather feather-check-circle\"} ><path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline></svg>\r\n            </span>\r\n            <button onClick={() => { animDeleteTodo(id) }}>X</button>\r\n        </div>\r\n        <p>{dateTime}</p>\r\n    </li>);\r\n}\r\n\r\nexport default Todo;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = () => {\r\n    const { list } = useContext(GlobalContext);\r\n\r\n    return (<ul>\r\n        <h2>My list</h2>\r\n        {list.map(cur => <Todo key={cur.id} text={cur.text} dateTime={cur.dateTime} id={cur.id} />)}\r\n    </ul>);\r\n} \r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport Heading from './Components/Heading';\nimport AddTodo from './Components/AddTodo';\nimport TodoList from './Components/TodoList';\nimport { GlobalProvider } from './Context/GlobalState';\n\n\nfunction App() {\n  document.title = \"Todo App\"\n\n  return (\n    <GlobalProvider>\n      <Heading />\n      <AddTodo />\n      <TodoList />\n    </GlobalProvider>\n  );\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}
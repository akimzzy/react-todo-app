{"version":3,"sources":["Components/Heading.js","Context/AppReducer.js","Context/GlobalState.js","Components/AddTodo.js","Components/AddSubTodo.js","Components/SubTodo.js","Components/Todo.js","Components/TodoList.js","App.js","index.js"],"names":["Heading","state","action","type","list","payload","map","x","id","done","checkValue","filter","subTodo","parentId","y","todoData","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTodo","addTodo","todo","doneTodo","addSubTodo","deleteSubTodo","doneSubTodo","useDateTime","format","val","toLocaleString","length","Date","getDate","getMonth","getFullYear","getHours","getMinutes","AddTodo","useState","text","setText","animPlay","setAnimPlay","useContext","date","onSubmit","e","preventDefault","trim","Math","ceil","random","dateTime","duration","Number","window","getComputedStyle","target","querySelector","getPropertyValue","replace","setTimeout","addNewTodo","htmlFor","placeholder","required","onChange","className","xmlns","width","height","viewBox","d","transform","fill","AddSubTodo","SubTodo","showSubTodo","setShowSubTodo","heading","CheckValue","setCheckValue","key","checked","onClick","Todo","fade","setFade","useEffect","style","background","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","addEventListener","animDeleteTodo","TodoList","cur","App","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7681ef5b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Heading = () => {\r\n    return ( <header>\r\n        <h1>TODO APP</h1>\r\n        <p>Just add things...</p>\r\n            \r\n    </header> );\r\n}\r\n \r\nexport default Heading;","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            return {\r\n                ...state,\r\n                list: [action.payload, ...state.list]\r\n            }\r\n\r\n        case 'DONE_TODO':\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => {\r\n                    if(action.payload.id === x.id) {\r\n                        x.done = action.payload.checkValue\r\n                    }\r\n                    return x\r\n                })\r\n            }\r\n\r\n        case 'DELETE_TODO':\r\n            return {\r\n                ...state,\r\n                list: state.list.filter(x => x.id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_SUB_TODO':\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => {\r\n                    if (x.id === action.payload.id) {\r\n                        x.subTodo = [action.payload.subTodo, ...x.subTodo]\r\n                    }\r\n                    return x\r\n                })\r\n            }\r\n\r\n        case 'DELETE_SUB_TODO':\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => {\r\n                    if (x.id === action.payload.parentId) {\r\n                        x.subTodo = x.subTodo.filter(x => x.id !== action.payload.id)\r\n                    }\r\n                    return x\r\n                })\r\n            }\r\n\r\n        case 'DONE_SUB_TODO':\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => {\r\n                    if (x.id === action.payload.parentId) {\r\n                        x.subTodo = x.subTodo.map(y => {\r\n                            if (y.id === action.payload.id) {\r\n                                y.done = action.payload.checkValue\r\n                            }\r\n                            return y\r\n                        })\r\n                        return x\r\n                    }\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n} ","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial State\r\nlet todoData = {\r\n    list: [\r\n        // {\r\n        //     text: \"Go to store\",\r\n        //     id: 1, done: false,\r\n        //     dateTime: \"18-07-2020 | 15:46\",\r\n        //     subTodo: [\r\n        //         { text: \"Buy Rice\", id: 11, done: false },\r\n        //         { text: \"Buy Beans\", id: 12, done: false },\r\n        //         { text: \"Buy Bread\", id: 13, done: false },\r\n        //         { text: \"Buy Pepper\", id: 14, done: false },\r\n        //         { text: \"Buy Tomatoes\", id: 15, done: false },\r\n        //     ]\r\n        // },\r\n        // {\r\n        //     text: \"Go to eat\",\r\n        //     id: 2, done: false,\r\n        //     dateTime: \"18-07-2020 | 15:46\",\r\n        //     subTodo: [\r\n        //         { text: \"Rice\", id: 21, done: true },\r\n        //         { text: \"Beans\", id: 22, done: false },\r\n        //     ]\r\n        // }\r\n    ]\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(todoData);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, todoData)\r\n\r\n    // Actions\r\n    const deleteTodo = id => {\r\n        dispatch({\r\n            type: \"DELETE_TODO\",\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    const addTodo = todo => {\r\n        dispatch({\r\n            type: \"ADD_TODO\",\r\n            payload: todo\r\n        })\r\n    }\r\n\r\n    const doneTodo = (id, checkValue) => {\r\n        dispatch({\r\n            type: \"DONE_TODO\",\r\n            payload: { id, checkValue }\r\n        })\r\n    }\r\n\r\n    const addSubTodo = (id, subTodo) => {\r\n        dispatch({\r\n            type: \"ADD_SUB_TODO\",\r\n            payload: {\r\n                id,\r\n                subTodo\r\n            }\r\n        })\r\n    }\r\n\r\n    const deleteSubTodo = (parentId, id) => {\r\n        dispatch({\r\n            type: \"DELETE_SUB_TODO\",\r\n            payload: { parentId, id }\r\n        })\r\n    }\r\n\r\n    const doneSubTodo = (parentId, id, checkValue) => {\r\n        dispatch({\r\n            type: 'DONE_SUB_TODO',\r\n            payload: {parentId, id, checkValue}\r\n        })\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        list: state.list,\r\n        deleteTodo,\r\n        addTodo,\r\n        doneTodo,\r\n        addSubTodo,\r\n        deleteSubTodo,\r\n        doneSubTodo\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\nconst AddTodo = () => {\r\n    const [text, setText] = useState(\"\");\r\n    const [animPlay, setAnimPlay] = useState(false)\r\n    const { addTodo } = useContext(GlobalContext);\r\n    const date = useDateTime()\r\n    const newId = () => Math.ceil(Math.random() * 1000000) + 1;\r\n\r\n    const addNewTodo = (e) => {\r\n        e.preventDefault()\r\n        if (text.trim() !== \"\") {\r\n            const todo = {\r\n                id: newId(),\r\n                text,\r\n                done: false,\r\n                dateTime: date(),\r\n                subTodo: []\r\n            }\r\n            setAnimPlay(true)\r\n            const duration = Number(window.getComputedStyle(e.target.querySelector(\"svg\"), null).getPropertyValue(\"transition-duration\").replace(\"s\", \"\")) * 1000\r\n            addTodo(todo)\r\n            setText(\"\")\r\n            setTimeout(() => {\r\n                setAnimPlay(false)\r\n            }, duration)\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    return (<form onSubmit={(e) => addNewTodo(e)}>\r\n        <label htmlFor=\"quickAdd\"><h2>Quick Add</h2></label>\r\n        <input type=\"text\" id=\"quickAdd\" placeholder=\"type here\" required value={text} onChange={(e) => setText(e.target.value)} />\r\n        <button>Add to list</button>\r\n        <svg className={animPlay ? \"add_anim\" : null} xmlns=\"http://www.w3.org/2000/svg\" width=\"16.004\" height=\"11.333\" viewBox=\"0 0 16.004 11.333\"><path d=\"M-16.2,40.933a1,1,0,0,1-1.6,0l-7-9.333A1,1,0,0,1-24,30h14a1,1,0,0,1,.8,1.6Z\" transform=\"translate(25.002 -30)\" fill=\"#fff\" /></svg>\r\n    </form>);\r\n}\r\n\r\nconst useDateTime = () => {\r\n    const date = () => {\r\n        const format = val => val.toLocaleString().length === 1 ? `0${val}` : val;\r\n        return `${format(new Date().getDate())}-${format(new Date().getMonth())}-${new Date().getFullYear()} | ${format(new Date().getHours())}:${format(new Date().getMinutes())}`;\r\n    }\r\n\r\n    return date\r\n}\r\n\r\nexport default AddTodo;","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nconst AddSubTodo = ({parentId}) => {\r\n    const { addSubTodo } =useContext(GlobalContext)\r\n    const [text, setText] = useState(\"\");\r\n    const newId = () => Math.ceil(Math.random() * 1000000) + parentId;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault() \r\n        \r\n        const subTodo = {\r\n            id: newId(),\r\n            text,\r\n            done: false\r\n        }\r\n        addSubTodo(parentId, subTodo)\r\n        setText(\"\")\r\n    }\r\n\r\n\r\n    return ( <form className=\"addSubTodo\" onSubmit={handleSubmit}>\r\n        {/* <label htmlFor=\"add_details\"><h3>Add details</h3></label> */}\r\n        <input type=\"text\" id=\"add_details\" value={text} onChange={ (e) => setText(e.target.value)} required/>\r\n        <button>Add</button>\r\n    </form> );\r\n}\r\n \r\nexport default AddSubTodo;","import React, { useContext, useState, useEffect } from 'react';\r\nimport AddSubTodo from './AddSubTodo';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nconst SubTodo = ({ id, subTodo, showSubTodo, setShowSubTodo, heading }) => {\r\n    const { doneSubTodo } = useContext(GlobalContext)\r\n    const { deleteSubTodo } = useContext(GlobalContext);\r\n    const [CheckValue, setCheckValue] = useState(false)\r\n\r\n\r\n    return (<div className={showSubTodo ? \"subTodo_containter\" : \"subTodo_containter hide\"}>\r\n        <AddSubTodo parentId={id} />\r\n        <h2>{heading}</h2>\r\n        <ul>\r\n            {subTodo.map(x =>\r\n                <li key={x.id}>\r\n                    <h3>{x.text}</h3>\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        checked={CheckValue} onChange={() => setCheckValue(!CheckValue)} />\r\n                    <button onClick={() => deleteSubTodo(id, x.id)}><b>X</b></button>\r\n                </li>\r\n            )}\r\n        </ul>\r\n        <button className=\"return\" onClick={() => setShowSubTodo(false)}>X</button>\r\n    </div>);\r\n}\r\n\r\nexport default SubTodo;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\nimport SubTodo from './SubTodo';\r\n\r\nconst Todo = ({ text, dateTime, id, subTodo }) => {\r\n    const { doneTodo, deleteTodo } = useContext(GlobalContext)\r\n    const [fade, setFade] = useState(false)\r\n    const [CheckValue, setCheckValue] = useState(false)\r\n    const [showSubTodo, setShowSubTodo] = useState(false);\r\n\r\n    const animDeleteTodo = id => {\r\n        setFade(true)\r\n        window.addEventListener(\"transitionend\", () => deleteTodo(id))\r\n    }\r\n\r\n    useEffect(() => doneTodo(id, CheckValue), [CheckValue])\r\n\r\n    return (\r\n        <div>\r\n            <li className={fade ? \"del_anim\" : null}>\r\n                <div >\r\n                    <h3 className={CheckValue ? \"done_todo\" : null} onClick={() => setShowSubTodo(true)} >{text}</h3>\r\n                    <span style={{ background: CheckValue ? \"white\" : \"transparent\" }}>\r\n                        <input type=\"checkbox\" checked={CheckValue} onChange={() => setCheckValue(!CheckValue)} />\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"green\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={CheckValue ? \"feather feather-check-circle check_anim\" : \"feather feather-check-circle\"} ><path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline></svg>\r\n                    </span>\r\n                    <button onClick={() => { animDeleteTodo(id) }}>X</button>\r\n                </div>\r\n                <p>{dateTime}</p>\r\n            </li>\r\n            <SubTodo heading={text} showSubTodo={showSubTodo} setShowSubTodo={setShowSubTodo} id={id} subTodo={subTodo} />\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Todo;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = () => {\r\n    const { list } = useContext(GlobalContext);\r\n\r\n    return (<ul>\r\n        <h2>My list</h2>\r\n        {list.map(cur => <Todo key={cur.id} subTodo={cur.subTodo} text={cur.text} dateTime={cur.dateTime} id={cur.id} />)}\r\n    </ul>);\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport Heading from './Components/Heading';\nimport AddTodo from './Components/AddTodo';\nimport TodoList from './Components/TodoList';\nimport { GlobalProvider } from './Context/GlobalState';\n\nfunction App() {\n  document.title = \"Todo App\"\n\n  return (\n    <GlobalProvider>\n      <Heading />\n      <AddTodo />\n      <TodoList />\n    </GlobalProvider>\n  );\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}